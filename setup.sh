#!/bin/bash
printf "Running initilization script, this will clone the repos and set up Docker containers\n"
printf "Version 1.1 03/31/23\n"

printf "\nThis script is designed to clone the GitHub repositories for the frontend and backend
of the arQive project and build docker containers for each repository. This file (./setup.sh) should
be edited to reflect the location of the repos and the branches you are working with.
"

##Further if you would like to rebuild a certain branch you can remove that directory and the script
##will clone and build whatever is missing. This does not include the .env file generated by the backend:
##
##  thearqive-backend/.env
##
##this must be copied over manually to 
#
##  arQive-frontend/.env
##
  
## These values can be changed to the particular branch of the backend and frontent
## that you want to use
## WARNING: Depending on your fork of the project, you may need to configure the Dockerfile and 
## docker-compose.yml in each directory to work correctly with configuration each repo is using.
backend_repo="https://github.com/kennardlim1220/thearqive-backend"
backend_branch=updated_stack

frontend_repo="https://github.com/kennardlim1220/arQive-frontend"
frontend_branch=updated_stack


printf "
Backend branch is: $backend_branch
Frontend branch is: $frontend_branch
-----------------------------------
This can be changed in ./setup.sh\n
Proceed? [y/n]: "
read -n 1 ans

if [[ "$ans" != "y" ]]; then
  exit 0;
fi

## Prerequisites: Docker, docker-compose, git and a defaultdb.sql file
command -v docker >/dev/null 2>&1 || { echo >&2 "Docker is required to run this script but it's not installed.  Aborting.\n"; exit 1; }
command -v docker-compose >/dev/null 2>&1 || { echo >&2 "docker-compose is required to run this script but it's not installed.  Aborting.\n"; exit 1; }
command -v git >/dev/null 2>&1 || { echo >&2 "git is required to run this script but it's not installed.  Aborting.\n"; exit 1; }

if [[ ! -f "dev/source/backend/defaultdb.sql" ]]; then
  printf "\n
ERROR:\n
File dev/source/backend/defaultdb.sql not found
Get a defaultdb.sql file and put it in the directory: dev/source/backend\n"
  exit 1
fi

## Clone repos, these must both be present before the
## docker environment can be built.  The buildbackend.sh
## script creates a .env file that for the frontend so
## the directory ./arqive-frontend must exist
printf "\nCloning frontend, using branch $frontend_branch ...\n"
if [[ -e "arQive-frontend" ]]; then
  echo "Frontend repo exists, skipping clone\n"
else
git clone --branch $frontend_branch $frontend_repo 
  if [[ "$?" != "0" ]]; then
    echo "Frontend clone failed. Exiting\n"
    exit 1
  fi
fi


printf "\n
Cloning backend, using branch $backend_branch ...\n"
if [[ -e "thearqive-backend" ]]; then
  printf "Backend repo exists, skipping clone\n"
else
git clone --branch $backend_branch $backend_repo 
  if [[ "$?" != "0" ]]; then
    printf "Backend clone failed. Exiting\n"
    exit 1
  fi
fi

## Build scripts
printf "Running: /dev/docker/buildbackend.sh\n"
./dev/docker/buildbackend.sh

printf "Running: /dev/docker/buildfrontend.sh\n"

./dev/docker/buildfrontend.sh

## Testing scripts
printf "Frontend and Backend builds completed\n"
./dev/docker/spin-up.sh

printf "\n
Navigate to here with your web browswer:
- 127.0.0.1:8000   Backend Development Server
- 127.0.0.1:3000   Frontend Development Server
Press any key to stop containers... "
read -n 1 ans

if [[ "$ans" != "y" ]]; then
  ./dev/docker/spin-down.sh
fi
